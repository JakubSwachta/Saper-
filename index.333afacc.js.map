{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f44dc46f33b6a5e35594c56f6703238e.js","src/APP/Game.js","src/APP/Cell.js","src/APP/UI.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/APP/Counter.js","src/APP/Timer.js","src/APP/ResetButton.js","src/APP/Modal.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d751713988987e9331980363e24189ce\";module.bundle.HMR_BUNDLE_ID = \"8f527a37d7e41f87f316cdba333afacc\";// @flow\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\n\nvar OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function(fn) {\n      this._acceptCallbacks.push(fn || function() {});\n    },\n    dispose: function(fn) {\n      this._disposeCallbacks.push(fn);\n    },\n  };\n  module.bundle.hotData = undefined;\n}\nmodule.bundle.Module = Module;\n\nvar checkedAssets /*: {|[string]: boolean|} */,\n  acceptedAssets /*: {|[string]: boolean|} */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return (\n    HMR_HOST ||\n    (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost')\n  );\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol =\n    HMR_SECURE ||\n    (location.protocol == 'https:' &&\n      !/localhost|127.0.0.1|0.0.0.0/.test(hostname))\n      ? 'wss'\n      : 'ws';\n  var ws = new WebSocket(\n    protocol + '://' + hostname + (port ? ':' + port : '') + '/',\n  );\n  // $FlowFixMe\n  ws.onmessage = function(event /*: {data: string, ...} */) {\n    checkedAssets = ({} /*: {|[string]: boolean|} */);\n    acceptedAssets = ({} /*: {|[string]: boolean|} */);\n    assetsToAccept = [];\n\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      var handled = false;\n      assets.forEach(asset => {\n        var didAccept =\n          asset.type === 'css' ||\n          (asset.type === 'js' &&\n            hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle));\n        if (didAccept) {\n          handled = true;\n        }\n      });\n\n      if (handled) {\n        console.clear();\n\n        assets.forEach(function(asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe\n          ? ansiDiagnostic.codeframe\n          : ansiDiagnostic.stack;\n\n        console.error(\n          '🚨 [parcel]: ' +\n            ansiDiagnostic.message +\n            '\\n' +\n            stack +\n            '\\n\\n' +\n            ansiDiagnostic.hints.join('\\n'),\n        );\n      }\n\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  };\n  ws.onerror = function(e) {\n    console.error(e.message);\n  };\n  ws.onclose = function(e) {\n    if (process.env.PARCEL_BUILD_ENV !== 'test') {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  let errorHTML =\n    '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>\n          ${stack}\n        </pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n\n  overlay.innerHTML = errorHTML;\n\n  return overlay;\n}\n\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function() {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute(\n    'href',\n    // $FlowFixMe\n    link.getAttribute('href').split('?')[0] + '?' + Date.now(),\n  );\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function() {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer =\n        hostname === 'localhost'\n          ? new RegExp(\n              '^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort(),\n            ).test(href)\n          : href.indexOf(hostname + ':' + getPort());\n      var absolute =\n        /^https?:\\/\\//i.test(href) &&\n        href.indexOf(window.location.origin) !== 0 &&\n        !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(\n  bundle /*: ParcelRequire */,\n  id /*: string */,\n  depsByBundle /*: ?{ [string]: { [string]: string } }*/,\n) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function(v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function(cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function(cb) {\n      var assetsToAlsoAccept = cb(function() {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n  acceptedAssets[id] = true;\n}\n","import { Cell } from './Cell.js';\r\nimport { UI } from './UI.js';\r\nimport { Counter } from './Counter.js';\r\nimport { Timer } from './Timer.js';\r\nimport { ResetButton } from './ResetButton.js';\r\nimport { Modal } from './Modal.js';\r\n\r\n// extends - rozszerzamy naszą klasę o wszystkie metody z UI\r\nclass Game extends UI {\r\n\t/* --------- tworzmy obiekt konfiguracyjny, hash oznaczy prywatny z liczbą kolumn, wierszy i min ------*/\r\n\t#config = {\r\n\t\teasy: {\r\n\t\t\trows: 8,\r\n\t\t\tcols: 8,\r\n\t\t\tmines: 10,\r\n\t\t},\r\n\t\tnormal: {\r\n\t\t\trows: 16,\r\n\t\t\tcols: 16,\r\n\t\t\tmines: 40,\r\n\t\t},\r\n\t\texpert: {\r\n\t\t\trows: 16,\r\n\t\t\tcols: 30,\r\n\t\t\tmines: 99,\r\n\t\t},\r\n\t};\r\n\r\n\t// nowy obiekt Counter będocy instancją naszej klasy Counter\r\n\t#counter = new Counter();\r\n\t#timer = new Timer();\r\n\r\n\t#modal = new Modal();\r\n\r\n\t#isGameFinished = false;\r\n\r\n\t#numbersOfRows = null;\r\n\t#numbersOfCols = null;\r\n\t#numbersOfMines = null;\r\n\r\n\t/* -pusta tablica do której będziemy wypychać nasze komórki -*/\r\n\t#cells = [];\r\n\t/*    będziemy chcieć klikać nasze komórki */\r\n\t#cellsElements = null;\r\n\r\n\t#cellsToReveal = 0;\r\n\t#revealedCells = 0;\r\n\r\n\t/* metoda do chwytania naszych elementów  */\r\n\t#board = null;\r\n\t#buttons = {\r\n\t\tmodall: null,\r\n\t\teasy: null,\r\n\t\tnormal: null,\r\n\t\texpert: null,\r\n\t\treset: new ResetButton(),\r\n\t};\r\n\r\n\t/*---- podczas ładowania okna przeglądarki odpalana jest metoda initializeGame która odpala dwie kolejne metody   ----*/\r\n\t// odpala metoidy #handleElements() i #newGame()\r\n\tinitializeGame() {\r\n\t\tthis.#handleElements();\r\n\t\t// inicjujemy counter\r\n\t\t// łąpiemy elemęnt w którym wyświetlamy liczbę min(za pomocą metody getElement i selektora [data-counter])\r\n\t\tthis.#counter.init();\r\n\t\t// inicjujemy Timer\r\n\t\tthis.#timer.init();\r\n\t\tthis.#addButtonsEventListeners();\r\n\r\n\t\tthis.#newGame();\r\n\t}\r\n\t/* --- Domyślnie jeśli urzytkownik uruchomi sobie kartę przeglądarki to pokazujemy poziom łątwy ---- */\r\n\t#newGame(rows = this.#config.easy.rows, cols = this.#config.easy.cols, mines = this.#config.easy.mines) {\r\n\t\tthis.#numbersOfRows = rows;\r\n\t\tthis.#numbersOfCols = cols;\r\n\t\tthis.#numbersOfMines = mines;\r\n\t\t// console.log(this.#numbersOfMines);\r\n\t\t// mnetoda przypisuje do naszego value które wykorzystujemy w updateValue liczbę min\r\n\t\tthis.#counter.setValue(this.#numbersOfMines);\r\n\t\tthis.#timer.resetTimer();\r\n\r\n\t\t// ile komórek trzeba odkryć aby eygrać gre\r\n\t\tthis.#cellsToReveal = this.#numbersOfCols * this.#numbersOfRows - this.#numbersOfMines;\r\n\r\n\t\tthis.#setStyles();\r\n\t\tthis.#generateCells();\r\n\t\tthis.#renderBoard();\r\n\t\tthis.#placeMinesInCels();\r\n\t\t// łąpiemy kolekcje elementów za pomocą QuerySelectora z class UI o atrbycie [data-cell] i przypisujemy\r\n\t\tthis.#cellsElements = this.getElements(this.UiSelectors.cell);\r\n\r\n\t\tthis.#buttons.reset.changeEmotion('neutral');\r\n\r\n\t\t// milieśmy zapisaną #isGameFinished na true dlatego nie mogliśmy odsłaniać komórek po restarcie gry\r\n\t\tthis.#isGameFinished = false;\r\n\t\t// w stanie naszej gry była cały czas zapisana liczba odkrytych komórek\r\n\t\t// musimy pamiętać o resetowaniu\r\n\t\tthis.#revealedCells = 0;\r\n\r\n\t\tthis.#addCellsEventListners();\r\n\t}\r\n\r\n\t#endGame(isWin) {\r\n\t\tthis.#isGameFinished = true;\r\n\t\tthis.#timer.stopTimer();\r\n\t\tthis.#modal.buttonText = 'Close';\r\n\t\t/* ----------PRZEGRANA-------- */\r\n\t\t// jeśli fałsz to odkryj wszystkie miny\r\n\t\tif (!isWin) {\r\n\t\t\tthis.#revealMines();\r\n\t\t\tthis.#modal.infoText = 'You lost, try again!';\r\n\t\t\tthis.#buttons.reset.changeEmotion('negative');\r\n\t\t\tthis.#modal.setText();\r\n\t\t\tthis.#modal.toggleModal();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/*--------- WYGRANA -------------*/\r\n\t\t// podajemy czas w jaki wygrał użytkownik wygrał\r\n\t\tthis.#modal.infoText =\r\n\t\t\tthis.#timer.numberOfSeconds < this.#timer.maxNumberOfSeconds\r\n\t\t\t\t? `You won, it took you ${this.#timer.numberOfSeconds} second, congratulations!`\r\n\t\t\t\t: `You won, congratulations!`;\r\n\t\tthis.#buttons.reset.changeEmotion('positive');\r\n\t\tthis.#modal.setText();\r\n\t\tthis.#modal.toggleModal();\r\n\r\n\t\t/* \tthis.#modal.infoText =\r\n\t\t\tthis.#timer.numberOfSeconds < this.#timer.maxNumberOfseconds\r\n\t\t\t\t? `You won, it took you ${this.#timer.numberOfSeconds} seconds, congratulations`\r\n\t\t\t\t: `You Won! Congratulations`;\r\n\t\tthis.#buttons.reset.changeEmotion('positive');\r\n\t\tthis.#modal.setText();\r\n\t\tthis.#modal.toggleModal(); */\r\n\t}\r\n\r\n\t/*------!!! klikanie na komórki!!!------*/\r\n\t// dodajemy metode obsługująca zdarzenia dla wszystkich naszych komorek lewy klik odsłonięcie komórki, prawy bedziemy ustawiali flagę na komórce\r\n\t// contextmenu czyli kliknięcie prawym przyciskiem myszy\r\n\t#addCellsEventListners() {\r\n\t\tthis.#cellsElements.forEach((element) => {\r\n\t\t\telement.addEventListener('click', this.#handleCellClick);\r\n\t\t\telement.addEventListener('contextmenu', this.#handleCellContextMenu);\r\n\t\t});\r\n\t}\r\n\r\n\t// #removeCellsEventListners() {\r\n\t// \tthis.#cellsElements.forEach((element) => {\r\n\t// \t\telement.removeEventListner('click', this.#handleCellClick);\r\n\t// \t\telement.removeEventListner('contextmenu', this.#handleCellContextMenu);\r\n\t// \t});\r\n\t// }\r\n\r\n\t#removeCellsEventListeners() {\r\n\t\tthis.#cellsElements.forEach((element) => {\r\n\t\t\telement.removeEventListener('click', this.#handleCellClick);\r\n\t\t\telement.removeEventListener('contextmenu', this.#handleCellContextMenu);\r\n\t\t});\r\n\t}\r\n\r\n\t/* -------------- !!!!! klikanie przyciskó easy medium expert !!!!!!! ------------- */\r\n\t#addButtonsEventListeners() {\r\n\t\tthis.#buttons.modal.addEventListener('click', this.#modal.toggleModal);\r\n\r\n\t\tthis.#buttons.easy.addEventListener('click', () =>\r\n\t\t\tthis.#handleNewGameClick(this.#config.easy.rows, this.#config.easy.cols, this.#config.easy.mines)\r\n\t\t);\r\n\t\tthis.#buttons.normal.addEventListener('click', () =>\r\n\t\t\tthis.#handleNewGameClick(this.#config.normal.rows, this.#config.normal.cols, this.#config.normal.mines)\r\n\t\t);\r\n\t\tthis.#buttons.expert.addEventListener('click', () =>\r\n\t\t\tthis.#handleNewGameClick(this.#config.expert.rows, this.#config.expert.cols, this.#config.expert.mines)\r\n\t\t);\r\n\t\tthis.#buttons.reset.element.addEventListener('click', () => this.#handleNewGameClick());\r\n\t}\r\n\r\n\t// przycisk restarujący (buźka) zaczynamy od nowa na tym samym poziomie trudności\r\n\t// ustawiamy parametry defaultowe takie które odpalą się po wywołaniu funkcji bez parametrów\r\n\t#handleNewGameClick(rows = this.#numbersOfRows, cols = this.#numbersOfCols, mines = this.#numbersOfMines) {\r\n\t\tthis.#removeCellsEventListeners();\r\n\t\tthis.#newGame(rows, cols, mines);\r\n\t}\r\n\r\n\t// chwytamy nasz element o atrybucie '[data-board]' poprzez querySelector z metody getElement  (board, element => article) z UI class  bedziemy mogli wkłądać do niego komórki\r\n\t#handleElements() {\r\n\t\tthis.#board = this.getElement(this.UiSelectors.board);\r\n\t\t/* ----- chwytamy pozostałe przyciski BUŹKA, EASY, NORMAL, EXPERT */\r\n\t\t// przypisujemy do odpowiedniego property naszego nowo stworzonego obiektu #buttons elementy które chwytamy po atrybucie z classy UI\r\n\t\tthis.#buttons.modal = this.getElement(this.UiSelectors.modalButton);\r\n\t\tthis.#buttons.easy = this.getElement(this.UiSelectors.easyButton);\r\n\t\t// console.log(this.#buttons.easy);\r\n\t\tthis.#buttons.normal = this.getElement(this.UiSelectors.normalButton);\r\n\t\tthis.#buttons.expert = this.getElement(this.UiSelectors.expertButton);\r\n\t}\r\n\r\n\t/* w pętli tworzymy nasze komórki */\r\n\t// tworzymy tablicę w której będziemy trzymać nasze komórki\r\n\t// na miejsce w tablicy \"this.#cells\" o indeksie \"row\" wrzuć pustą yablicę\r\n\t// mamy tablicę składającą się z 8 pustych tablic(rzędy)\r\n\t#generateCells() {\r\n\t\t// czyścimy naszą tablicę\r\n\t\tthis.#cells.length = 0;\r\n\t\tfor (let row = 0; row < this.#numbersOfRows; row++) {\r\n\t\t\tthis.#cells[row] = [];\r\n\t\t\t// console.log(this.#cells);\r\n\t\t\tfor (let col = 0; col < this.#numbersOfCols; col++) {\r\n\t\t\t\t// tutaj chcielibyśmy wepchnąć naszą komrókę (z Cell.js)\r\n\t\t\t\t// cel i row miejsca w tablicy cells(zwarte w konstuktorze)\r\n\t\t\t\t// nowy obiekt  będący instacją classy Cell push na miejsce (col, row) czyli x,y z konstruktora\r\n\t\t\t\tthis.#cells[row].push(new Cell(col, row));\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(this.#cells);\r\n\t}\r\n\t/* -- metoda która będzie nam tworzyłą elementy które */\r\n\t#renderBoard() {\r\n\t\t// console.log(this.#board.firstChild.nodeName);\r\n\t\t// console.log(this.#board.innerHTML);\r\n\t\t/* -- PROBLEM */\r\n\t\t// cały czas po klikaniu w przyciski poziomu trudności dodają się nowe komórki do naszej tablicy ???\r\n\t\t// this.#board.innerHTML = ''\r\n\t\twhile (this.#board.firstChild) {\r\n\t\t\tthis.#board.removeChild(this.#board.firstChild);\r\n\t\t}\r\n\t\t// spłaszcamy, tweorzymy tablicę jedno wymiarową i dla każdego jej elementu\r\n\t\t/*---  do anszego #board() \"element chwycony za pomocą atrybutu '[data-board]' [czyli nasza plansza article] w funkcji handleElements\"\r\n\t   dodajemy jako ostatnie dziecko metodę createElement(którą wywołujemy na obiekcie cell czyli naszym elemencie z for each) z Cells.js która zraca nam const element z nasszym divem  ---*/\r\n\t\t// każdemu property element w każdym obiekcie cell  zostaje przpisane po znaku = document.querySelector(selector) poprzez wywołąnie metody createElement() na obiekcie cell z UI.js\r\n\t\t// selektorem w typ wypadku jest cell.selector property które ma wartosć `[data-x=\"${this.x}\"][data-y=\"${this.y}\"]`\r\n\t\t// po tym selektorze łapiemy naszego diva\r\n\t\tthis.#cells.flat().forEach((cell) => {\r\n\t\t\tthis.#board.insertAdjacentHTML('beforeend', cell.createElement());\r\n\t\t\tcell.element = cell.getElement(cell.selector);\r\n\t\t\t// console.log(cell);\r\n\t\t});\r\n\t\t// console.log(this.#board);\r\n\t}\r\n\r\n\t// tworzymy metode odpoowiedzialną za rozmieszczenie min\r\n\t// przypisujemy liczbę min do zmiennej\r\n\t// W pętli przypisujemy wylosowane liczby do zmiennych\r\n\t// używamy zmiennych jako indeksów w naszej komórce\r\n\t#placeMinesInCels() {\r\n\t\tlet minesToPlace = this.#numbersOfMines;\r\n\r\n\t\twhile (minesToPlace) {\r\n\t\t\tconst rowIndex = this.#getRandomInteger(0, this.#numbersOfRows - 1);\r\n\t\t\tconst colIndex = this.#getRandomInteger(0, this.#numbersOfCols - 1);\r\n\r\n\t\t\tconst cell = this.#cells[rowIndex][colIndex];\r\n\r\n\t\t\tconst hasCellMine = cell.isMine;\r\n\t\t\t// jeśli nasza komórka cell do której przypisaliśmy poszczególną komórkę za po mocą this.#cells[rowIndex][colIndex];\r\n\t\t\t// nie ma miny -> łaściwość cell.isMine jest false to odpali się metoda addMine która doda nam mine oraz zmniejszy minesToPlace o jeden\r\n\t\t\tif (!hasCellMine) {\r\n\t\t\t\tcell.addMine();\r\n\t\t\t\tminesToPlace--;\r\n\t\t\t\t// console.log(minesToPlace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------!!! klikanie na kórkę LEWYM przyciskiem  !!!------*/\r\n\t/* dodajemy metody które wywołujemy w naszym addEventListner */\r\n\t// target element na którym wywołana zdarzenie\r\n\t// funkcja handleCellClick przypisze nam do zmiennej ten element na który klikniemy\r\n\t// następnie pobierzemy wartość atrybutu dla tego elementu\r\n\t#handleCellClick = (e) => {\r\n\t\tconst target = e.target;\r\n\t\t// zmienne w których trzymamy index naszego wiersza\r\n\t\t// get atribute zwraca nam wartość atrybutu w tym wypadku stringa\r\n\t\t// zmieniamy stringa na liczbę za pomocą parseInt\r\n\t\tconst rowIndex = parseInt(target.getAttribute('data-y'), 10);\r\n\t\tconst colIndex = parseInt(target.getAttribute('data-x'), 10);\r\n\r\n\t\t// Mamy tablice dwuwymiarową a w zmiennych  przetrzymujemy lokalizację naszych komórek\r\n\t\t//  wywołujemy metodę revealCell z class Cell a komórkę przekazujemy jako parametr\r\n\t\tconst cell = this.#cells[rowIndex][colIndex];\r\n\t\tthis.#clickCell(cell);\r\n\t};\r\n\r\n\t/*------!!! klikanie na kórkę PRAWYM przyciskiem  !!!------*/\r\n\t// metoda która będzie wywoływana  po praywm kliknięciu\r\n\t// funkcja strzałkowa aby nie zgubić kontesktu\r\n\t#handleCellContextMenu = (e) => {\r\n\t\t// nie chemy żęby wyświetlało się menu kontekstowe po kliknieciu prawym\r\n\t\te.preventDefault();\r\n\t\tconst target = e.target;\r\n\t\t// zmienne w których trzymamy index naszego wiersza\r\n\t\tconst rowIndex = parseInt(target.getAttribute('data-y'), 10);\r\n\t\tconst colIndex = parseInt(target.getAttribute('data-x'), 10);\r\n\r\n\t\tconst cell = this.#cells[rowIndex][colIndex];\r\n\t\tif (cell.isReveal || this.#isGameFinished) return;\r\n\t\t// console.log(cell.isReveal);\r\n\t\t/* ----- wyświetlamy liczbę flag w naszym oknie  ------ */\r\n\t\t// jeśli mamy flagę oznaczoną to\r\n\t\tif (cell.isFlagged) {\r\n\t\t\tthis.#counter.increment();\r\n\t\t\tcell.toggleFlag();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// konwertujemy do wartości bolean jeden ! zamienia nam true na false adrugi false zpowrotem na true\r\n\t\t// jeśli by nie było tego if to możemy wejść na minusowe wartości\r\n\t\tif (!!this.#counter.value) {\r\n\t\t\tthis.#counter.decrement();\r\n\t\t\tcell.toggleFlag();\r\n\t\t}\r\n\t};\r\n\t// sprwdzamy czy dana komórka jest miną\r\n\t// funkcja jest wywoływana po kliknięciu w komórkę\r\n\t#clickCell(cell) {\r\n\t\t// jeśli to jest prawdą to nie możemy kliknąć\r\n\t\tif (this.#isGameFinished || cell.isFlagged) return;\r\n\t\tif (cell.isMine) {\r\n\t\t\t// argument false bo przegrywamy\r\n\t\t\tthis.#endGame(false);\r\n\t\t}\r\n\t\tthis.#setCellValue(cell);\r\n\r\n\t\tif (this.#revealedCells === this.#cellsToReveal && !this.#isGameFinished) {\r\n\t\t\tthis.#endGame(true);\r\n\t\t}\r\n\t}\r\n\t/*------- odsłaniamy wszystkie miny po skończonej grze --------- */\r\n\t// filtrujemy nasze komórki które są miną\r\n\t// if cell.isMine jest true z metody filter to znaczy żmają minę\r\n\t#revealMines() {\r\n\t\tthis.#cells\r\n\t\t\t.flat()\r\n\t\t\t.filter(({ isMine }) => isMine)\r\n\t\t\t.forEach((cell) => cell.revealCell());\r\n\t}\r\n\r\n\t/* -------chcemy zobaczyć ile w sąsiadujących komórkach znajduje sie min -------*/\r\n\t//  w pętli for wykonujemy iteracje ponaszej tablicy dwuwymiarowej, w pierwszej pętli odnajdujemy komórkę o jeden mniejszą od naszej i wykonujemy do o jeden większej\r\n\t// w kolejnej pętli schodzimy do rzędów i tam odnajdujemy o jeden mniejszy od klikniętego i wykonujemy do o jeden większego\r\n\t#setCellValue(cell) {\r\n\t\tlet minesCount = 0;\r\n\t\t// dla skrajnych komórek nie możemy iść w jedną stronę dlatego używamy funkcji Math\r\n\t\t// u żywamywamy funkcji Math.max wybieramy największą liczbę z podanych czyli np. miendzy (cell - 1 a 0)\r\n\t\t// Math.min - this.#numberOfRows to jset 8, cell.y + 1 w przypadku skrajnej komórki nie istnieje\r\n\t\t// pierwsza pętla bedzie wykonywać się dopóki rowIndex będzię mniejszy bądźrówny wartośći mniejszej z tych dwóch(cell.y + 1 oraz this.#numberOfRows - 1 )\r\n\t\tfor (\r\n\t\t\tlet rowIndex = Math.max(cell.y - 1, 0);\r\n\t\t\trowIndex <= Math.min(cell.y + 1, this.#numbersOfRows - 1);\r\n\t\t\trowIndex++\r\n\t\t) {\r\n\t\t\tfor (\r\n\t\t\t\tlet colIndex = Math.max(cell.x - 1, 0);\r\n\t\t\t\tcolIndex <= Math.min(cell.x + 1, this.#numbersOfCols - 1);\r\n\t\t\t\tcolIndex++\r\n\t\t\t) {\r\n\t\t\t\t// jeślo komórka o podanych indexach jest miną to  zwiększamy minesCount o jeden\r\n\t\t\t\tif (this.#cells[rowIndex][colIndex].isMine) minesCount++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcell.value = minesCount;\r\n\t\tcell.revealCell();\r\n\t\t// zwiększamy ilość odkrytych komórek\r\n\t\tthis.#revealedCells++;\r\n\t\t/* -----   Odkrywamy pola automatycznie jeśli nie są otoczone miną ------ */\r\n\t\t// jeśli cell.value równa się zero (czyli negacja) to robimy jeszcze raz pętle w pętli\r\n\t\tif (!cell.value) {\r\n\t\t\tfor (\r\n\t\t\t\tlet rowIndex = Math.max(cell.y - 1, 0);\r\n\t\t\t\trowIndex <= Math.min(cell.y + 1, this.#numbersOfRows - 1);\r\n\t\t\t\trowIndex++\r\n\t\t\t) {\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet colIndex = Math.max(cell.x - 1, 0);\r\n\t\t\t\t\tcolIndex <= Math.min(cell.x + 1, this.#numbersOfCols - 1);\r\n\t\t\t\t\tcolIndex++\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst cell = this.#cells[rowIndex][colIndex];\r\n\t\t\t\t\t// jeślo komórka o podanych indexach nie jest odkryta to wywołujemy metodę clickCell()\r\n\t\t\t\t\tif (!cell.isReveal) {\r\n\t\t\t\t\t\tthis.#clickCell(cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/* tworzymy metodę która bedzie dopasowywać maksymalną szerokość naszego board z komórkami do ilości komórek w rzedzie */\r\n\t// łapiemy naszą ustawioną właściowść z css [--cells-in-row] i na jej miejsce wstawiamy wartość z [this.#numbersOfCols]\r\n\t#setStyles() {\r\n\t\tdocument.documentElement.style.setProperty('--cells-in-row', this.#numbersOfCols);\r\n\t}\r\n\r\n\t// losujemy liczbę któa będzie potrzebna w metodzie placeMinesInCels\r\n\t#getRandomInteger(min, max) {\r\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t}\r\n}\r\n\r\n/* ----- przy załadowaniu strony odpali się funkcja która storzy obiekt game będący isntacją klasy Game---- */\r\n/*---- zostanie także urruchomiona metoda initializeGame ----*/\r\nwindow.onload = function () {\r\n\tconst game = new Game();\r\n\t// console.log(game);\r\n\r\n\tgame.initializeGame();\r\n};\r\n","import { UI } from './UI.js';\r\n\r\n/* Każdy index naszej tablicy Cells składa się z tablic a każda tablica z 8 obiektów.  */\r\n// obiekt będący instacją tej klasy push do naszej tablicy cells\r\nexport class Cell extends UI {\r\n\tconstructor(x, y) {\r\n\t\tsuper();\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.value = 0;\r\n\t\tthis.isMine = false;\r\n\t\tthis.isReveal = false;\r\n\t\tthis.isFlagged = false;\r\n\t\t// dataset (własne atrybuty zaczynają  się od słowa data\r\n\t\t/*- [data-x=\"${this.x}\"] to atrybut którego [w nowym obiekcie neww Cell będącym instacją tej klasy]  wartością jest numer [columna] który został przisany  w pętli for -*/\r\n\t\tthis.selector = `[data-x=\"${this.x}\"][data-y=\"${this.y}\"]`;\r\n\t\tthis.element = null;\r\n\t}\r\n\r\n\t/* -- Metoda która do zmiennej przypisje nam diva z kalsami i atrybutami po których chwytamy i zwraca go  --*/\r\n\tcreateElement() {\r\n\t\tconst element = `<div class=\"cell border border--concave\" data-cell data-x=\"${this.x}\" data-y=\"${this.y}\"></div>`;\r\n\t\treturn element;\r\n\t}\r\n\r\n\t// zmieniamy isReveal na true\r\n\t// usuwamy z listy calss klasę border--concave.\r\n\t// a dodajemy nową klasę z css odpowiedzilaną za wklęsłość\r\n\trevealCell() {\r\n\t\tthis.isReveal = true;\r\n\t\tthis.element.classList.remove('border--concave');\r\n\t\tthis.element.classList.add('border--revealed');\r\n\r\n\t\t// dodajemy naszą klasę z miną jeśli this.mine is true\r\n\t\tif (this.isMine) {\r\n\t\t\tthis.element.classList.add('cell--is-mine');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.value) {\r\n\t\t\tthis.element.textContent = this.value;\r\n\t\t\t// console.log(this.value);\r\n\t\t\t// dzieki zapisowi this.value dodajemy odpowiednią klasę do naszej komórki\r\n\t\t\tthis.element.classList.add(`cell-info-${this.value}`);\r\n\t\t}\r\n\t}\r\n\r\n\t// metoda odpalana po kliknięciu prawym przyciskiem pozwala zdejmować i nakłądać flagę na komórki\r\n\ttoggleFlag() {\r\n\t\tthis.isFlagged = !this.isFlagged;\r\n\t\t// console.log(this.isFlagged);\r\n\t\tthis.element.classList.toggle('cell--is-flag');\r\n\t}\r\n\r\n\taddMine() {\r\n\t\tthis.isMine = true;\r\n\t}\r\n}\r\n","/* chcemy wyrenderować nasze komórki użytkownikowi wewnątrz <article> */\r\n// chcemy złapać nasz <article>\r\nexport class UI {\r\n\t// obiekt w którym chcemy trzymać wszystkie nasze selektory\r\n\tUiSelectors = {\r\n\t\t// wyszukujemy po atrybucie data(zapisujemy w stringu)\r\n\t\tboard: '[data-board]',\r\n\t\tcell: '[data-cell]',\r\n\t\tcounter: '[data-counter]',\r\n\t\ttimer: '[data-timer]',\r\n\t\tresetButton: '[data-button-reset]',\r\n\t\teasyButton: '[data-button-easy]',\r\n\t\tnormalButton: '[data-button-normal]',\r\n\t\texpertButton: '[data-button-expert]',\r\n\t\tmodal: '[data-modal]',\r\n\t\tmodalHeader: '[data-modal-header]',\r\n\t\tmodalButton: '[data-modal-button]',\r\n\t};\r\n\tgetElement(selector) {\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\tgetElements(selector) {\r\n\t\treturn document.querySelectorAll(selector);\r\n\t}\r\n}\r\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { UI } from './UI.js';\r\n\r\nexport class Counter extends UI {\r\n\tvalue = null;\r\n\t#element = null;\r\n\r\n\t// poprzez użycie metody get Elelment z UI class za pomocą QuerySeloctora łapiemy pierwszy element o atrybucie [data-counter] i przypisujemy do this.#element\r\n\tinit() {\r\n\t\t// console.log(this.getElement(this.UiSelectors.counter));\r\n\t\tthis.#element = this.getElement(this.UiSelectors.counter);\r\n\t\t// console.log(this.#element);\r\n\t}\r\n\r\n\tsetValue(value) {\r\n\t\tthis.value = value;\r\n\t\tthis.#updateValue();\r\n\t}\r\n\r\n\t// do value dodajemy 1 i updatetujemy odpalając metodę this.#updateValue()\r\n\tincrement() {\r\n\t\tthis.value++;\r\n\t\tthis.#updateValue();\r\n\t}\r\n\r\n\t// zmniejszamy value o 1 i updatetujemy odpalając metodę this.#updateValue()\r\n\tdecrement() {\r\n\t\tthis.value--;\r\n\t\tthis.#updateValue();\r\n\t}\r\n\r\n\t// zmieniamy wartość value, zmieniamy teklst w wyświetlanym elemencie na zawartość value\r\n\t#updateValue() {\r\n\t\t// console.log(this.value);\r\n\t\tthis.#element.textContent = this.value;\r\n\t\t// console.log(this.#element.textContent);\r\n\t}\r\n}\r\n","import { UI } from './UI.js';\r\n\r\nexport class Timer extends UI {\r\n\t#elemetn = null;\r\n\t#interval = null;\r\n\tnumberOfSeconds = 0;\r\n\tmaxNumberOfSeconds = 999;\r\n\r\n\t// przypisujemy do this.#elemetn nasz element o atrybucie [data-timer] z clasy UI\r\n\tinit() {\r\n\t\tthis.#elemetn = this.getElement(this.UiSelectors.timer);\r\n\t}\r\n\t// odpalamy naszą funkcje updateTimer co jedną sekunde\r\n\t#startTimer() {\r\n\t\tthis.#interval = setInterval(() => this.#updateTimer(), 1000);\r\n\t}\r\n\t// żeby użyć clearInterval musimy przypisać do zmiennej nasz setInterval i podać go jako parametr w clearInterval\r\n\tstopTimer() {\r\n\t\tclearInterval(this.#interval);\r\n\t}\r\n\tresetTimer() {\r\n\t\tthis.numberOfSeconds = 0;\r\n\t\tthis.#setTimerValue(this.numberOfSeconds);\r\n\t\tthis.stopTimer();\r\n\t\tthis.#startTimer();\r\n\t}\r\n\r\n\t// funkcja dodaje nam do #numberOfSecond jeden oraz wywołuje funkcje setTimerValue argumentem this.#numberOfSecoond\r\n\t#updateTimer() {\r\n\t\tthis.numberOfSeconds++;\r\n\t\tthis.numberOfSeconds <= this.maxNumberOfSeconds ? this.#setTimerValue(this.numberOfSeconds) : this.stopTimer();\r\n\t}\r\n\t// funkcja przypisuje do chwyconego elementu value jakie podamy wy argumencie\r\n\t// właśnie to chcemy wyświetlić e naszym oknie\r\n\t// co sekunde będzie do naszego elementu wkładane value\r\n\t#setTimerValue(value) {\r\n\t\tthis.#elemetn.textContent = value;\r\n\t}\r\n}\r\n","import { UI } from './UI.js';\r\n\r\nexport class ResetButton extends UI {\r\n\telement = this.getElement(this.UiSelectors.resetButton);\r\n\r\n\t// zmieniamy obrazek z minaką\r\n\tchangeEmotion(emotion) {\r\n\t\t// mamy wybrany nasz button\r\n\t\t// wewnątrz naszego buttona chcemy wybrać element use\r\n\t\t// i będziemly chcieli zmieniać atrybut href(naszą minkę)\r\n\t\t// metoda setAttribute ustawia nową wartość dla atrybutu\r\n\t\tthis.element.querySelector('use').setAttribute('href', `/src/assets/sprite.svg#${emotion}`);\r\n\t}\r\n}\r\n","import { UI } from './UI.js';\r\n\r\nexport class Modal extends UI {\r\n\tbuttonText = '';\r\n\tinfoText = '';\r\n\telement = this.getElement(this.UiSelectors.modal);\r\n\tbutton = this.getElement(this.UiSelectors.modalButton);\r\n\theader = this.getElement(this.UiSelectors.modalHeader);\r\n\r\n\ttoggleModal = () => {\r\n\t\tthis.element.classList.toggle('hide');\r\n\t};\r\n\r\n\tsetText() {\r\n\t\tthis.header.textContent = this.infoText;\r\n\t\tthis.button.textContent = this.buttonText;\r\n\t}\r\n}\r\n"],"names":[],"version":3,"file":"index.333afacc.js.map","sourceRoot":"/__parcel_source_root/"}